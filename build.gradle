plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

repositories {
	mavenCentral()
}

ext {
	queryDslVersion = "5.1.0"
	jwtVersion = "0.12.5"
	testContainers = "1.20.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'            //validation
	implementation 'mysql:mysql-connector-java:8.0.33'                                  //mysql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'   // s3
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'            // redis
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'             // redis 시간저장
	implementation 'com.fasterxml.jackson.core:jackson-databind'                        // redis 시간저장

	implementation 'org.springframework.boot:spring-boot-starter-security'              // Security

	// JWT
	implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation "org.springframework.boot:spring-boot-starter-jdbc"
}

tasks.named('test') {
	useJUnitPlatform()
}
